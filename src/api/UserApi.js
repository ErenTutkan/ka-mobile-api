/**
 * Kolay Asistan Mobile API
 * Kolay Asistan mobile application api layer. Revision Date: 04.12.2022
 *
 * The version of the OpenAPI document: v1
 * Contact: ahmetyagibasan@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UserStatusDTO from '../model/UserStatusDTO';
import UserUpdateDTO from '../model/UserUpdateDTO';

/**
* User service.
* @module api/UserApi
* @version v1
*/
export default class UserApi {

    /**
    * Constructs a new UserApi. 
    * @alias module:api/UserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the userControllerUserDetail operation.
     * @callback module:api/UserApi~userControllerUserDetailCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Logged User Detail
     * @param {module:api/UserApi~userControllerUserDetailCallback} callback The callback function, accepting three arguments: error, data, response
     */
    userControllerUserDetail(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/user', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userControllerUserUpdate operation.
     * @callback module:api/UserApi~userControllerUserUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserUpdateDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Logged user update
     * @param {module:model/UserUpdateDTO} userUpdateDTO 
     * @param {module:api/UserApi~userControllerUserUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserUpdateDTO}
     */
    userControllerUserUpdate(userUpdateDTO, callback) {
      let postBody = userUpdateDTO;
      // verify the required parameter 'userUpdateDTO' is set
      if (userUpdateDTO === undefined || userUpdateDTO === null) {
        throw new Error("Missing the required parameter 'userUpdateDTO' when calling userControllerUserUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UserUpdateDTO;
      return this.apiClient.callApi(
        '/user', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the userControllerUserUpdateStatus operation.
     * @callback module:api/UserApi~userControllerUserUpdateStatusCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Logged User Update Status
     * @param {module:model/UserStatusDTO} userStatusDTO 
     * @param {module:api/UserApi~userControllerUserUpdateStatusCallback} callback The callback function, accepting three arguments: error, data, response
     */
    userControllerUserUpdateStatus(userStatusDTO, callback) {
      let postBody = userStatusDTO;
      // verify the required parameter 'userStatusDTO' is set
      if (userStatusDTO === undefined || userStatusDTO === null) {
        throw new Error("Missing the required parameter 'userStatusDTO' when calling userControllerUserUpdateStatus");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/user', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
