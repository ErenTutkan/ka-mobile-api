/**
 * Kolay Asistan Mobile API
 * Kolay Asistan mobile application api layer. Revision Date: 04.12.2022
 *
 * The version of the OpenAPI document: v1
 * Contact: ahmetyagibasan@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UserCreateDTO from '../model/UserCreateDTO';
import UserDetailDTO from '../model/UserDetailDTO';
import UserLoginDTO from '../model/UserLoginDTO';
import UserTokenDTO from '../model/UserTokenDTO';

/**
* Authorization service.
* @module api/AuthorizationApi
* @version v1
*/
export default class AuthorizationApi {

    /**
    * Constructs a new AuthorizationApi. 
    * @alias module:api/AuthorizationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the authControllerLogin operation.
     * @callback module:api/AuthorizationApi~authControllerLoginCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserTokenDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Login
     * @param {module:model/UserLoginDTO} userLoginDTO User credentials. username field must be users email
     * @param {module:api/AuthorizationApi~authControllerLoginCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserTokenDTO}
     */
    authControllerLogin(userLoginDTO, callback) {
      let postBody = userLoginDTO;
      // verify the required parameter 'userLoginDTO' is set
      if (userLoginDTO === undefined || userLoginDTO === null) {
        throw new Error("Missing the required parameter 'userLoginDTO' when calling authControllerLogin");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UserTokenDTO;
      return this.apiClient.callApi(
        '/auth/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authControllerUserDetail operation.
     * @callback module:api/AuthorizationApi~authControllerUserDetailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserDetailDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Logged User Detail
     * @param {module:api/AuthorizationApi~authControllerUserDetailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserDetailDTO}
     */
    authControllerUserDetail(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserDetailDTO;
      return this.apiClient.callApi(
        '/auth/me', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authControllerUserRegister operation.
     * @callback module:api/AuthorizationApi~authControllerUserRegisterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserTokenDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Register user
     * @param {module:model/UserCreateDTO} userCreateDTO 
     * @param {module:api/AuthorizationApi~authControllerUserRegisterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserTokenDTO}
     */
    authControllerUserRegister(userCreateDTO, callback) {
      let postBody = userCreateDTO;
      // verify the required parameter 'userCreateDTO' is set
      if (userCreateDTO === undefined || userCreateDTO === null) {
        throw new Error("Missing the required parameter 'userCreateDTO' when calling authControllerUserRegister");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UserTokenDTO;
      return this.apiClient.callApi(
        '/auth/register', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
