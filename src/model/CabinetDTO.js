/**
 * Kolay Asistan Mobile API
 * Kolay Asistan mobile application api layer. Revision Date: 04.12.2022
 *
 * The version of the OpenAPI document: v2
 * Contact: ahmetyagibasan@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CabinetDTO model module.
 * @module model/CabinetDTO
 * @version v2
 */
class CabinetDTO {
    /**
     * Constructs a new <code>CabinetDTO</code>.
     * @alias module:model/CabinetDTO
     * @param medicineBarcode {String} medicineBarcode
     * @param packType {String} packType
     * @param packCount {Number} packCount
     * @param expireDate {Date} expireDate
     * @param comment {String} comment
     */
    constructor(medicineBarcode, packType, packCount, expireDate, comment) { 
        
        CabinetDTO.initialize(this, medicineBarcode, packType, packCount, expireDate, comment);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, medicineBarcode, packType, packCount, expireDate, comment) { 
        obj['medicineBarcode'] = medicineBarcode;
        obj['packType'] = packType;
        obj['packCount'] = packCount;
        obj['expireDate'] = expireDate;
        obj['comment'] = comment;
    }

    /**
     * Constructs a <code>CabinetDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CabinetDTO} obj Optional instance to populate.
     * @return {module:model/CabinetDTO} The populated <code>CabinetDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CabinetDTO();

            if (data.hasOwnProperty('medicineBarcode')) {
                obj['medicineBarcode'] = ApiClient.convertToType(data['medicineBarcode'], 'String');
            }
            if (data.hasOwnProperty('packType')) {
                obj['packType'] = ApiClient.convertToType(data['packType'], 'String');
            }
            if (data.hasOwnProperty('packCount')) {
                obj['packCount'] = ApiClient.convertToType(data['packCount'], 'Number');
            }
            if (data.hasOwnProperty('expireDate')) {
                obj['expireDate'] = ApiClient.convertToType(data['expireDate'], 'Date');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CabinetDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CabinetDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CabinetDTO.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['medicineBarcode'] && !(typeof data['medicineBarcode'] === 'string' || data['medicineBarcode'] instanceof String)) {
            throw new Error("Expected the field `medicineBarcode` to be a primitive type in the JSON string but got " + data['medicineBarcode']);
        }
        // ensure the json data is a string
        if (data['packType'] && !(typeof data['packType'] === 'string' || data['packType'] instanceof String)) {
            throw new Error("Expected the field `packType` to be a primitive type in the JSON string but got " + data['packType']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }

        return true;
    }


}

CabinetDTO.RequiredProperties = ["medicineBarcode", "packType", "packCount", "expireDate", "comment"];

/**
 * medicineBarcode
 * @member {String} medicineBarcode
 */
CabinetDTO.prototype['medicineBarcode'] = undefined;

/**
 * packType
 * @member {String} packType
 */
CabinetDTO.prototype['packType'] = undefined;

/**
 * packCount
 * @member {Number} packCount
 */
CabinetDTO.prototype['packCount'] = undefined;

/**
 * expireDate
 * @member {Date} expireDate
 */
CabinetDTO.prototype['expireDate'] = undefined;

/**
 * comment
 * @member {String} comment
 */
CabinetDTO.prototype['comment'] = undefined;






export default CabinetDTO;

