/**
 * Kolay Asistan Mobile API
 * Kolay Asistan mobile application api layer. Revision Date: 08.10.2023
 *
 * The version of the OpenAPI document: v4.0.1
 * Contact: ahmetyagibasan@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PharmacyDTO from './PharmacyDTO';

/**
 * The MedicineDTOPharmacy model module.
 * @module model/MedicineDTOPharmacy
 * @version v4.0.1
 */
class MedicineDTOPharmacy {
    /**
     * Constructs a new <code>MedicineDTOPharmacy</code>.
     * Pharmacy info
     * @alias module:model/MedicineDTOPharmacy
     * @implements module:model/PharmacyDTO
     * @param name {String} Pharmacy name
     * @param phone {String} Pharmacy phone
     */
    constructor(name, phone) { 
        PharmacyDTO.initialize(this, name, phone);
        MedicineDTOPharmacy.initialize(this, name, phone);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, phone) { 
        obj['name'] = name;
        obj['phone'] = phone;
    }

    /**
     * Constructs a <code>MedicineDTOPharmacy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MedicineDTOPharmacy} obj Optional instance to populate.
     * @return {module:model/MedicineDTOPharmacy} The populated <code>MedicineDTOPharmacy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MedicineDTOPharmacy();
            PharmacyDTO.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MedicineDTOPharmacy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MedicineDTOPharmacy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MedicineDTOPharmacy.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }

        return true;
    }


}

MedicineDTOPharmacy.RequiredProperties = ["name", "phone"];

/**
 * Pharmacy name
 * @member {String} name
 */
MedicineDTOPharmacy.prototype['name'] = undefined;

/**
 * Pharmacy phone
 * @member {String} phone
 */
MedicineDTOPharmacy.prototype['phone'] = undefined;


// Implement PharmacyDTO interface:
/**
 * Pharmacy name
 * @member {String} name
 */
PharmacyDTO.prototype['name'] = undefined;
/**
 * Pharmacy phone
 * @member {String} phone
 */
PharmacyDTO.prototype['phone'] = undefined;




export default MedicineDTOPharmacy;

